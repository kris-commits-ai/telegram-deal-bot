
print("üöÄ –ó–∞–ø—É—â–µ–Ω –±–æ—Ç –∏–∑ —Ñ–∞–π–ª–∞:", __file__)
mport asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = "7617854158:AAHdN8KR74iguSk0o2uc8vcsbq6xsP_lT9M"  # –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

# –ö–∞—Ä—Ç–∞ —Ñ–æ—Ä–º –ø–æ –Ω–æ–º–µ—Ä—É –≤—Å—Ç—Ä–µ—á–∏
FORMS = {
    "1": "https://docs.google.com/forms/d/e/1FAIpQLSf-HLgog5fei68ZmebxNrnW7iLDEwqYCgyASqNpbzDuirJ1HQ/viewform",
    "2": "https://docs.google.com/forms/d/e/FORM_ID_2/viewform",
    "3": "https://docs.google.com/forms/d/e/FORM_ID_3/viewform"
}

# ID –ø–æ–ª–µ–π Google Forms (—É–∑–Ω–∞–µ–º —á–µ—Ä–µ–∑ "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å")
FIELDS = {
    "deal_id": "entry.1355511633",     # ID —Å–¥–µ–ª–∫–∏
    "client_name": "entry.1094477986", # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    "full_name": "entry.1237317028"    # –§–∞–º–∏–ª–∏—è –ò–º—è
}

# === –õ–æ–≥–∏–∫–∞ ===
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\nID, –ö–ª–∏–µ–Ω—Ç, ‚Ññ –≤—Å—Ç—Ä–µ—á–∏, –§–∞–º–∏–ª–∏—è –ò–º—è")

@dp.message()
async def handle_message(message: types.Message):
    try:
        deal_id, client_name, meeting_number, full_name = [x.strip() for x in message.text.split(",")]
    except ValueError:
        await message.reply("‚ùå –§–æ—Ä–º–∞—Ç: ID, –ö–ª–∏–µ–Ω—Ç, ‚Ññ –≤—Å—Ç—Ä–µ—á–∏, –§–∞–º–∏–ª–∏—è –ò–º—è")
        return

    base_form_url = FORMS.get(meeting_number)
    if not base_form_url:
        await message.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –≤—Å—Ç—Ä–µ—á–∏. –î–æ—Å—Ç—É–ø–Ω—ã–µ: " + ", ".join(FORMS.keys()))
        return

    link = (
        f"{base_form_url}?usp=pp_url"
        f"&{FIELDS['deal_id']}={deal_id.replace(' ', '+')}"
        f"&{FIELDS['client_name']}={client_name.replace(' ', '+')}"
        f"&{FIELDS['full_name']}={full_name.replace(' ', '+')}"
    )

    await message.reply(f"‚úÖ –í–∞—à–∞ —Ñ–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞:\n{link}")

# === –ó–∞–ø—É—Å–∫ ===
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
